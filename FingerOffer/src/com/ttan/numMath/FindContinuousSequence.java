package com.ttan.numMath;

import java.util.ArrayList;

/**
 * @Description: 和为S的连续正数序列
 * @author ttan
 * @time 2019年7月9日 下午4:03:12
 */
public class FindContinuousSequence {
	/* 小明很喜欢数学,有一天他在做数学作业时,要求计算出9~16的和,他马上就写出了正确答案是100。
	 * 但是他并不满足于此,他在想究竟有多少种连续的正数序列的和为100(至少包括两个数)。
	 * 没多久,他就得到另一组连续正数和为100的序列:18,19,20,21,22。
	 * 现在把问题交给你,你能不能也很快的找出所有和为S的连续正数序列? 
	 * Good Luck!*/

	// 输出所有和为S的连续正数序列。序列内按照从小至大的顺序，序列间按照开始数字从小到大的顺序

	public ArrayList<ArrayList<Integer>> FindContinuousSequence(int sum) {
		ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
		if (sum < 3) {
			return result;
		}
		// 设置左边界和右边界
		int left = 1;
		int right = 2;
		while (left < right) {
			int gosTemp = (left + right) * (right - left + 1) / 2;
			if (gosTemp == sum) {
				ArrayList<Integer> list = new ArrayList<Integer>();
				for (int i = left; i <= right; i++) {
					list.add(i);
				}
				result.add(list);
				left++;
			} else if (gosTemp < sum) {
				right++;
			} else {
				left++;
			}
		}
		return result;
	}

	public static void main(String[] args) {
		System.out.println(new FindContinuousSequence().FindContinuousSequence(1000));
	}
}
